{"version":3,"sources":["components/ProductView/ProductView.module.css","components/SortSelection/SortSelection.module.css","components/Product/Product.module.css","components/ProductList/ProductList.module.css","utils/getProductData.js","components/InputField/InputField.js","components/CustomButton/CustomButton.js","components/SortSelection/SortSelection.js","components/RadioButtons/RadioButtons.js","components/Product/Product.js","components/ProductList/ProductList.js","components/ProductView/ProductView.js"],"names":["module","exports","getProductData","url","method","a","productData","total_count","current_page","previous_page_url","next_page_url","pages_count","products","fetch","then","response","json","result","catch","err","alert","InputField","inputSearchValue","inputValue","value","onChange","event","target","CustomButton","type","title","icon","onClick","name","SortSelection","sortChange","Option","Select","defaultValue","sortMapping","toLowerCase","sortDirection","map","item","key","className","style","ArrowUpOutlined","ArrowDownOutlined","RadioButtons","buttonsArr","activeButton","Group","index","Button","iconName","Icon","require","menuIcon","Product","image","price","chooseProduct","displayType","wrap","hoverable","classnames","carContentList","src","replace","alt","tileImage","listImage","productName","productPrice","ProductList","productList","tileWrap","listWrap","ProductView","match","useState","isLoaded","setIsLoaded","setProductList","searchValue","setSearchValue","pages","setPages","notFound","setNotFound","visibleModal","setVisibleModal","showedProduct","setShowedProduct","sortField","sortData","setSortData","setDisplayType","getProductList","currentPage","params","length","split","searchProduct","fetchUrl","undefined","changePage","setTimeout","window","scrollTo","NumberPagination","current","responsive","defaultCurrent","total","page","showSizeChanger","hideOnSinglePage","itemRender","originalElement","to","useEffect","searchBar","searchForm","SearchOutlined","displayTypeButtons","productListWrap","pagination","visible","onOk","onCancel","okText","preloader","size"],"mappings":"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","file":"static/js/4.a524bb2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ProductView_wrap__DlehH\",\"searchBar\":\"ProductView_searchBar__fd6qR\",\"productListWrap\":\"ProductView_productListWrap__2lcA-\",\"preloader\":\"ProductView_preloader__1GgKd\",\"image\":\"ProductView_image__1gxQq\",\"pagination\":\"ProductView_pagination__2quUx\",\"notFound\":\"ProductView_notFound__3h0mS\",\"searchForm\":\"ProductView_searchForm__soCRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"SortSelection_icon__1MI4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Product_wrap__1v3L3\",\"image\":\"Product_image__3GIla\",\"tileImage\":\"Product_tileImage__2C3O0\",\"listImage\":\"Product_listImage__1jwce\",\"carContentList\":\"Product_carContentList__3VufJ\",\"productName\":\"Product_productName__28jv9\",\"productPrice\":\"Product_productPrice__J3kTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tileWrap\":\"ProductList_tileWrap__2ffmK\",\"listWrap\":\"ProductList_listWrap__CqoLD\"};","export const getProductData = async (url, method) => {\r\n  let productData = {\r\n    total_count: '',\r\n    current_page: '',\r\n    previous_page_url: '',\r\n    next_page_url: '',\r\n    pages_count: '',\r\n    products: [],\r\n  };\r\n\r\n  await fetch(url, {method: method})\r\n    .then(response => response.json())\r\n    .then(result =>  productData = result)\r\n    .catch(err => {\r\n      alert(`Произошла ошибка при загрузке страницы: ${err}`)\r\n    })\r\n\r\n  return productData;\r\n};\r\n","import React from 'react';\r\nimport {Input} from 'antd';\r\n\r\nconst InputField = ({inputSearchValue, inputValue}) => {\r\n\r\n  const handleChange = (event) => {\r\n    inputSearchValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Input\r\n      value={inputValue}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport {Button} from 'antd';\r\n\r\nconst CustomButton = ({type, title, icon, onClick, name}) => {\r\n  return (\r\n    <Button\r\n      name={name}\r\n      type={type}\r\n      icon={icon}\r\n      onClick={onClick}\r\n    >\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport {Select} from 'antd';\r\nimport {ArrowDownOutlined, ArrowUpOutlined} from '@ant-design/icons';\r\nimport sortMapping from './sortMapping.json';\r\nimport style from './SortSelection.module.css';\r\n\r\nconst SortSelection = ({sortChange}) => {\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <Select\r\n      defaultValue={`${sortMapping[0].name.toLowerCase()}-${sortMapping[0].sortDirection}`}\r\n      onChange={value => sortChange(value)}\r\n    >\r\n      {\r\n        sortMapping.map(item => (\r\n          <Option\r\n            key={`${item.name.toLowerCase()}-${item.sortDirection}`}\r\n            value={`${item.name.toLowerCase()}-${item.sortDirection}`}\r\n          >\r\n            <span className={style.icon}>\r\n              {item.sortDirection === 'asc' ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n            </span>\r\n            {item.name}\r\n          </Option>\r\n        ))\r\n      }\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default SortSelection;\r\n","import React from 'react';\r\nimport {Radio} from 'antd';\r\n\r\nconst RadioButtons = ({buttonsArr, activeButton, onChange}) => {\r\n  const menuIcon = (iconName) => {\r\n    const icons = require('@ant-design/icons');\r\n    let Icon = icons[iconName]\r\n    return <Icon />\r\n  };\r\n\r\n  return (\r\n    <Radio.Group value={activeButton} onChange={onChange}>\r\n      {\r\n        buttonsArr.map((item, index) => (\r\n          <Radio.Button value={item.name} key={index}>\r\n            {menuIcon(item.icon)}\r\n            {item.title}\r\n          </Radio.Button>\r\n        ))\r\n      }\r\n    </Radio.Group>\r\n  );\r\n};\r\n\r\nexport default RadioButtons;\r\n","import React from 'react';\r\nimport style from './Product.module.css';\r\nimport {Card} from 'antd';\r\nimport classnames from 'classnames';\r\n\r\nconst Product = ({image, name, price, chooseProduct, displayType}) => {\r\n  return (\r\n    <div\r\n      className={style.wrap}\r\n      onClick={() => chooseProduct(image, name, price)}\r\n    >\r\n      <Card hoverable>\r\n        <div className={classnames({\r\n          [style.carContentList]: displayType === 'list'\r\n        })}>\r\n          <img\r\n            src={image.replace('http', 'https')}\r\n            alt=\"phone\"\r\n            className={classnames({\r\n              [style.image]: true,\r\n              [style.tileImage]: displayType === 'tile',\r\n              [style.listImage]: displayType === 'list'\r\n            })}\r\n          />\r\n          <div>\r\n            <h3 className={style.productName}>{name}</h3>\r\n            <h1 className={style.productPrice}>{price} ₽</h1>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport Product from '../Product/Product';\r\nimport style from './ProductList.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst ProductList = ({productList, chooseProduct, displayType}) => {\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        [style.tileWrap]:displayType === 'tile',\r\n        [style.listWrap]: displayType === 'list'\r\n      })}\r\n    >\r\n      {productList.map((item, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <Product\r\n              image={item.image}\r\n              name={item.name}\r\n              price={item.price}\r\n              chooseProduct={chooseProduct}\r\n              displayType={displayType}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {getProductData} from '../../utils/getProductData';\r\nimport style from './ProductView.module.css';\r\nimport {Modal, Pagination, Space, Spin} from 'antd';\r\nimport InputField from '../InputField/InputField';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport {SearchOutlined} from '@ant-design/icons';\r\nimport SortSelection from '../SortSelection/SortSelection';\r\nimport RadioButtons from '../RadioButtons/RadioButtons';\r\nimport displayTypeButtons from '../../mapping/displayTypeButtons.json';\r\nimport ProductList from '../ProductList/ProductList';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProductView = ({match}) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [productList, setProductList] = useState([]);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [pages, setPages] = useState({\r\n    total_count: '',\r\n    current_page: '',\r\n    previous_page_url: '',\r\n    next_page_url: '',\r\n    pages_count: ''\r\n  });\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [showedProduct, setShowedProduct] = useState({\r\n    image: '',\r\n    name: '',\r\n    price: ''\r\n  });\r\n  const [sortData, setSortData] = useState({\r\n    sortField: 'name',\r\n    sortDirection: 'asc'\r\n  });\r\n  const [displayType, setDisplayType] = useState('tile');\r\n\r\n  const getProductList = async () => {\r\n    const currentPage = match.params.current_page ? match.params.current_page : 1;\r\n    const productData = await getProductData(`https://www.lenvendo.ru/api/js-test-task/?page=${currentPage}`, 'GET');\r\n\r\n    setProductList(productData.products);\r\n    setPages({\r\n      total_count: productData.total_count,\r\n      current_page: productData.current_page,\r\n      previous_page_url: productData.previous_page_url,\r\n      next_page_url: productData.next_page_url,\r\n    });\r\n    productData.products.length !== 0 ? setIsLoaded(true) : setIsLoaded(false);\r\n  };\r\n\r\n  const sortChange = async value => {\r\n    const [sortField, sortDirection] = value.split('-');\r\n    const url = `https://www.lenvendo.ru/api/js-test-task/?sort_field=${sortField}&sort_direction=${sortDirection}&page=1`;\r\n    const productData = await getProductData(url, 'GET');\r\n\r\n    setSortData({\r\n      sortField: sortField,\r\n      sortDirection: sortDirection\r\n    });\r\n\r\n    setProductList(productData.products);\r\n\r\n    setPages({\r\n      total_count: productData.total_count,\r\n      current_page: productData.current_page,\r\n      previous_page_url: productData.previous_page_url,\r\n      next_page_url: productData.next_page_url,\r\n    });\r\n  };\r\n\r\n  const inputSearchValue = (value) => {\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const searchProduct = async () => {\r\n    let fetchUrl;\r\n    if (searchValue) {\r\n      fetchUrl = `https://www.lenvendo.ru/api/js-test-task/?search=${searchValue}`;\r\n    } else {\r\n      fetchUrl = `https://www.lenvendo.ru/api/js-test-task/`;\r\n    }\r\n    const productData = await getProductData(fetchUrl, 'GET');\r\n    if (productData.products == undefined) {\r\n      setProductList([]);\r\n      setNotFound(true);\r\n    } else {\r\n      setProductList(productData.products);\r\n      setNotFound(false)\r\n    }\r\n\r\n    setPages({\r\n      total_count: productData.total_count,\r\n      current_page: productData.current_page,\r\n      previous_page_url: productData.previous_page_url,\r\n      next_page_url: productData.next_page_url,\r\n    });\r\n  };\r\n\r\n  const changePage = async (currentPage) => {\r\n    let fetchUrl;\r\n    if (currentPage - pages.current_page === 1) {\r\n      fetchUrl = pages.next_page_url.replace('http', 'https');\r\n    }\r\n\r\n    if (currentPage - pages.current_page === -1) {\r\n      fetchUrl = pages.previous_page_url.replace('http', 'https');\r\n    }\r\n\r\n    if (currentPage - pages.current_page > 1 || currentPage - pages.current_page < -1 || currentPage - pages.current_page === 0) {\r\n      fetchUrl = `https://www.lenvendo.ru/api/js-test-task/?page=${currentPage}`;\r\n    }\r\n\r\n    if (searchValue) {\r\n      fetchUrl = `${fetchUrl}&search=${searchValue}`;\r\n    }\r\n\r\n    const productData = await getProductData(`${fetchUrl}&sort_field=${sortData.sortField}&sort_direction=${sortData.sortDirection}`, 'GET');\r\n\r\n    setProductList(productData.products);\r\n    setPages({\r\n      total_count: productData.total_count,\r\n      current_page: productData.current_page,\r\n      previous_page_url: productData.previous_page_url,\r\n      next_page_url: productData.next_page_url,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0)\r\n    }, 100)\r\n  };\r\n\r\n  const chooseProduct = (image, name, price) => {\r\n    setShowedProduct({\r\n      name: name,\r\n      price: price,\r\n      image: image\r\n    });\r\n    setVisibleModal(true)\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const chooseDisplayType = (event) => {\r\n    setDisplayType(event.target.value)\r\n  };\r\n\r\n  const NumberPagination = () => {\r\n    return (\r\n        <Pagination\r\n          current={pages.current_page}\r\n          responsive={true}\r\n          defaultCurrent={pages.current_page}\r\n          total={pages.total_count}\r\n          onChange={(page) => changePage(page)}\r\n          showSizeChanger={false}\r\n          hideOnSinglePage={true}\r\n          itemRender={(page, type, originalElement) => {\r\n            return <Link to={`/productList/products/page=${page}`}>{originalElement}</Link>\r\n          }}\r\n        />\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProductList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.wrap}>\r\n      <div className={style.searchBar}>\r\n        <Space className={style.searchForm}>\r\n          <InputField\r\n            inputSearchValue={inputSearchValue}\r\n            inputValue={searchValue}\r\n          />\r\n          <CustomButton\r\n            name='Search'\r\n            title='Search'\r\n            onClick={searchProduct}\r\n            icon={<SearchOutlined/>}\r\n          />\r\n        </Space>\r\n        <Space>\r\n          <SortSelection\r\n            sortChange={sortChange}\r\n          />\r\n          <RadioButtons\r\n            buttonsArr={displayTypeButtons}\r\n            activeButton={displayType}\r\n            onChange={chooseDisplayType}\r\n          />\r\n        </Space>\r\n      </div>\r\n      {\r\n        isLoaded ? (\r\n          <div className={style.productListWrap}>\r\n            {notFound ? (\r\n              <h2 className={style.notFound}>По Вашему запросу ничего не найдено</h2>\r\n            ) : (\r\n              <div>\r\n                <div className={style.pagination}>\r\n                  {NumberPagination()}\r\n                </div>\r\n                <ProductList\r\n                  productList={productList}\r\n                  chooseProduct={chooseProduct}\r\n                  displayType={displayType}\r\n                />\r\n                <Modal\r\n                  visible={visibleModal}\r\n                  onOk={handleOk}\r\n                  onCancel={handleCancel}\r\n                  okText='Add to cart'\r\n                >\r\n                  <img\r\n                    src={showedProduct.image.replace('http', 'https')}\r\n                    alt=\"phone\"\r\n                    className={style.image}\r\n                  />\r\n                  <h3>{showedProduct.name}</h3>\r\n                  <h1>{showedProduct.price} ₽</h1>\r\n                </Modal>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className={style.preloader}>\r\n            <Spin\r\n              size='large'\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      <div className={style.pagination}>\r\n        {NumberPagination()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n"],"sourceRoot":""}